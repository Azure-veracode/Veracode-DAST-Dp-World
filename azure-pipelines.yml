trigger:
  - master  # Change to your branch if needed

pool:
  vmImage: 'ubuntu-latest'

variables:
  VERACODE_API_KEY_ID: $(VID)  # Fetch from Azure DevOps secrets
  VERACODE_API_KEY_SECRET: $(VKEY)
  TARGET_URL: "https://www.example.com"  # Replace with your live API URL

steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.x'
    displayName: 'Use Python 3.x'

  - script: |
      echo "========================================"
      echo " Step 1: Installing Dependencies"
      echo "========================================"
      sudo apt-get update -y
      sudo apt-get install -y python3 python3-pip curl jq
      pip install --upgrade httpie httpie-hmac-auth veracode-api-signing requests

      echo "========================================"
      echo " Step 2: Verifying Installations"
      echo "========================================"
      python3 --version
      pip list | grep -E 'httpie|veracode-api-signing'
    displayName: 'Install Dependencies'

  - script: |
      echo "========================================"
      echo " Step 3: Checking API Credentials"
      echo "========================================"
      if [[ -z "$VID" ]]; then
        echo "ERROR: VID (Veracode API Key ID) is not set!"
        exit 1
      fi

      if [[ -z "$VKEY" ]]; then
        echo "ERROR: VKEY (Veracode API Key Secret) is not set!"
        exit 1
      fi

      echo "✅ Veracode API Credentials found!"
    displayName: 'Check Environment Variables'
    env:
      VERACODE_API_KEY_ID: $(VID)
      VERACODE_API_KEY_SECRET: $(VKEY)

  - script: |
      echo "========================================"
      echo " Step 4: Creating Veracode Dynamic Scan"
      echo "========================================"

      analysis_payload=$(cat <<EOF
      {
        "name": "AzureDevOps-API-DynamicScan",
        "scans": [
          {
            "action_type": "ADD",
            "scan_config_request": {
              "target_url": {
                "url": "$(TARGET_URL)"
              }
            }
          }
        ],
        "schedule": {
          "duration": {
            "length": 2,
            "unit": "DAY"
          },
          "now": true,
          "schedule_status": "ACTIVE"
        }
      }
      EOF
      )

      response=$(curl -s -X POST "https://api.veracode.com/was/configservice/v1/analyses?scan_type=API_SCAN" \
      -H "Content-Type: application/json" \
      -H "Authorization: Veracode-HMAC" \
      -u "$(VID):$(VKEY)" \
      -d "$analysis_payload")

      analysis_id=$(echo "$response" | jq -r '.analysis_id')

      if [[ -z "$analysis_id" || "$analysis_id" == "null" ]]; then
        echo "❌ Error: Failed to trigger Dynamic Scan"
        exit 1
      fi

      echo "✅ Triggered Veracode Dynamic Scan with ID: $analysis_id"
      echo "##vso[task.setvariable variable=ANALYSIS_ID]$analysis_id"
    displayName: 'Trigger Veracode Dynamic Scan'
    env:
      VERACODE_API_KEY_ID: $(VID)
      VERACODE_API_KEY_SECRET: $(VKEY)